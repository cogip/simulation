FROM cogip/raspios:base AS common

# Update all packages
RUN apt-get update && apt-get -y dist-upgrade && apt-get -y clean

# Install all required Debian packages
RUN apt-get install -y --no-install-recommends \
        make build-essential libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
        libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev \
        git swig cmake pkg-config \
        cpufreqd cpufrequtils \
        openocd picocom \
        xserver-xorg-video-all xserver-xorg-input-all xserver-xorg-core xinit x11-xserver-utils chromium-browser unclutter \
        systemd-resolved systemd-timesyncd \
        i2c-tools libi2c-dev libserial-dev \
        cockpit dnsmasq iptables wait-for-it ifmetric can-utils

# Configure locale, timezone and keyboard
RUN rm -f /etc/localtime \
 && echo "Europe/Paris" >/etc/timezone \
 && dpkg-reconfigure -f noninteractive tzdata
RUN echo '\
XKBMODEL="pc105"\n\
XKBLAYOUT="fr"\n\
XKBVARIANT=""\n\
XKBOPTIONS=""\n' >/etc/default/keyboard
RUN dpkg-reconfigure -f noninteractive keyboard-configuration

# Disable auto-resize at first boot
RUN rm -f /etc/init.d/resize2fs_once /etc/rc3.d/S01resize2fs_once

# Enable WIFI interface
RUN for filename in /var/lib/systemd/rfkill/*:wlan; do echo 0 > $filename; done

# Auto console login
RUN systemctl set-default multi-user.target \
 && systemctl enable getty@tty1.service \
 && systemctl enable serial-getty@ttyAMA0.service

# Configure ssh server
RUN echo "root:cogip" | chpasswd \
 && systemctl enable ssh

#Â Use systemctl-networkd to manage network interfaces
RUN systemctl disable networking \
 && systemctl disable NetworkManager \
 && systemctl disable NetworkManager-wait-online.service \
 && systemctl enable systemd-networkd \
 && systemctl enable systemd-resolved \
 && systemctl enable systemd-timesyncd \
 && systemctl enable wpa_supplicant@wlan0.service \
 && systemctl disable systemd-networkd-wait-online.service

# Disable useless services
RUN systemctl disable userconfig \
 && systemctl disable regenerate_ssh_host_keys \
 && systemctl disable raspi-config \
 && systemctl disable systemd-rfkill \
 && systemctl disable apt-daily-upgrade \
 && systemctl disable systemd-random-seed \
 && systemctl disable rpi-eeprom-update \
 && systemctl disable ModemManager.service \
 && systemctl disable e2scrub_reap.service \
 && systemctl disable apparmor.service \
 && systemctl disable systemd-binfmt.service \
 && systemctl disable systemd-fsck@.service \
 && systemctl disable dphys-swapfile.service \
 && systemctl disable avahi-daemon \
 && systemctl disable nfs-client.target \
 && systemctl disable apt-daily.timer \
 && systemctl disable apt-daily-upgrade.timer \
 && systemctl disable dpkg-db-backup.timer \
 && systemctl disable e2scrub_all.timer \
 && systemctl disable fstrim.timer \
 && systemctl disable man-db.timer \
 && systemctl disable sshswitch.service \
 && systemctl disable triggerhappy.service

ENTRYPOINT ["/usr/bin/bash"]

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | env UV_INSTALL_DIR="/usr/local/bin" sh

# Install Python, version is specified in .python-version, a tmp copy from root directory.
RUN --mount=type=bind,source=.python-version,target=.python-version \
    uv python install

WORKDIR /opt

# Create a virtual environment to respect PEP 668
RUN uv venv

# Patch sysconfig of uv-managed Python installation. This Python version is compiled using clang
# so uv will use clang by default to build wheels with C/C++ extensions. Some packages are not compatible
# with clang. sysconfigpatcher will revert sysconfig variables to the default values
# of a Python system installation to use gcc to build wheels.
RUN uvx --isolated --from "git+https://github.com/bluss/sysconfigpatcher" sysconfigpatcher $(dirname $(dirname $(readlink .venv/bin/python)))

# Pre-install some Python requirements for COGIP tools
RUN --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --no-dev --no-install-project --frozen

# Add custom configuration files
ADD raspios/overlay-rootfs /

# Fix file permissions
RUN chmod 600 /etc/ssh/ssh_host_* \
 && chmod 640 /etc/ssh/ssh_host_*.pub \
 && chgrp cockpit-ws /etc/cockpit/cockpit.conf

# Install COGIP tools
RUN --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    --mount=type=bind,source=cogip,target=cogip \
    --mount=type=bind,source=LICENSE,target=LICENSE \
    uv sync --no-dev --no-editable --frozen


FROM common AS beacon

COPY raspios/overlay-rootfs-beacon/ /
RUN sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf && \
    chmod +x /etc/rc.local

RUN systemctl enable cogip-server-beacon \
 && systemctl enable cogip-dashboard-beacon


FROM common AS robot-common

# Enable COGIP services
RUN systemctl enable cogip-server \
 && systemctl enable cogip-dashboard \
 && systemctl enable cogip-planner


FROM robot-common AS robot

# Enable openocd and COGIP services
RUN systemctl enable openocd \
 && systemctl enable cogip-copilot \
 && systemctl enable cogip-detector \
 && systemctl enable cogip-robotcam


FROM robot-common AS pami

# Enable openocd and COGIP services
RUN systemctl enable openocd-pami \
 && systemctl enable cogip-copilot-pami \
 && systemctl enable cogip-detector-pami
