[build-system]
requires = ["scikit-build-core", "cython", "cython-cmake", "nanobind"]
build-backend = "scikit_build_core.build"

[project]
name = "cogip-tools"
authors = [{name = "COGIP Team", email = "cogip35@gmail.com"}]
version = "1.0.0"
requires-python = ">=3.12"
license = {file = "LICENSE"}
dependencies = [
    "aiohttp==3.10.10",
    "aioserial==1.3.1",
    "cython~=3.0.11",
    "cython-cmake~=0.2.1",
    "devtools==0.12.2",
    "fastapi==0.115.2",
    "gpiozero==2.0.1",
    "httpx==0.26.0",
    "Jinja2==3.1.2",
    "luma.oled==3.13.0",
    "matplotlib~=3.9.3",
    "more_itertools==10.1.0",
    "nanobind~=2.4.0",
    "numpy<2",
    "opencv-contrib-python==4.10.0.84",
    "polling2==0.5.0",
    "protobuf==3.20.3",
    "pydantic==2.9.2",
    "pydantic_settings==2.5.2",
    "pyserial==3.5",
    "py-spy==0.3.14",
    "python-can==4.3.1",
    "python-dotenv==1.0.0",
    "python-engineio==4.8.0",
    "python-socketio==5.10.0",
    "requests==2.31.0",
    "sentry-sdk==1.39.1",
    "toposort==1.10",
    "typer[all]==0.9.0",
    "uvicorn[standard]==0.24.0.post1",
    "v4l2py==3.0.0",
    "VL53L1X==0.0.5",
    "watchfiles==0.24.0",
    "websocket-client==1.7.0",
    "ydlidar==1.1.3 ; platform_machine == 'aarch64'"
]

[dependency-groups]
dev = [
    "MarkupSafe==2.1.3",
    "mkdocs==1.6.0",
    "mkdocs-gen-files==0.5.0",
    "mkdocs-literate-nav==0.6.1",
    "mkdocs-material==9.5.32",
    "mkdocstrings[python]==0.25.2",
    "pre-commit==4.0.1",
    "pymdown-extensions==10.9",
    "PySide6==6.6.1",
    "ruff==0.8.0",
    "toposort==1.10"
]

[project.urls]
Documentation = "https://cogip.github.io/cogip-tools"
Repository = "https://github.com/cogip/cogip-tools.git"

[project.scripts]
cogip-monitor = "cogip.tools.monitor.main:main"
cogip-replay = "cogip.tools.replay.main:main"
cogip-copilot = "cogip.tools.copilot.__main__:main"
cogip-detector = "cogip.tools.detector.__main__:main"
cogip-planner = "cogip.tools.planner.__main__:main"
cogip-beaconcam = "cogip.tools.beaconcam.main:main"
cogip-robotcam = "cogip.tools.robotcam.main:main"
cogip-server = "cogip.tools.server.__main__:main"
cogip-dashboard = "cogip.tools.dashboard.__main__:main"
cogip-lidarusb = "cogip.tools.lidarusb.main:main"
cogip-camera = "cogip.tools.camera.__main__:main"
cogip-server-beacon = "cogip.tools.server_beacon.__main__:main"
cogip-dashboard-beacon = "cogip.tools.dashboard_beacon.__main__:main"
cogip-copilot-pami = "cogip.tools.copilot_pami.__main__:main"
cogip-detector-pami = "cogip.tools.detector_pami.__main__:main"
cogip-cansend = "cogip.tools.cansend.__main__:main"
cogip-cpp-cython-example = "cogip.tools.cpp_cython_example.__main__:main"
cogip-cpp-nanobind-example = "cogip.tools.cpp_nanobind_example.__main__:main"
cogip-lidar-ld19 = "cogip.tools.lidar_ld19.__main__:main"

[tool.uv]
python-preference = "only-managed"

[[tool.uv.index]]
name = "ydlidar"
url = "https://github.com/cogip/YDLidar-SDK/releases/expanded_assets/wheels"
explicit = true

[tool.uv.sources]
ydlidar = { index = "ydlidar" }

[tool.scikit-build]
logging.level = "DEBUG"
cmake.source-dir = "cogip/cpp"
build-dir = "build"
build.verbose = true
editable.verbose = true
install.strip = false
cmake.build-type = "Debug" # Can be Debug, Release, MinSizeRel, RelWithDebInfo
wheel.packages = ["cogip"]
wheel.exclude = [
    "*.pyx",
    "*.cpp",
    "*.proto",
]
sdist.exclude = [
    "assets",
    "docker-compose.yml",
    "Dockerfile",
    "docs",
    ".gitattributes",
    ".github",
    ".gitignore",
    ".gitmodules",
    "Makefile",
    "mkdocs.yml",
    "PKG-INFO",
    ".pre-commit-config.yaml",
    "raspios",
    "submodules",
]
sdist.include = [
    "submodules/mcu-firmware/**/*.proto"
]

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    "submodules",
    "tests",
    "doc",
    "cogip/protobuf",
]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP",  # pyupgrade
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint.isort]
no-lines-before = ["future", "standard-library", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
